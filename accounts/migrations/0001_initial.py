# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-05-06 16:09
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(message='Username must be lowercased and Alphanumeric', regex='^[a-z0-9]+$')], verbose_name='username')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=30, verbose_name='last name')),
                ('middle_name', models.CharField(blank=True, max_length=35, null=True, verbose_name='middle name')),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_phone_number_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_client', models.BooleanField(default=False)),
                ('is_respondent', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_street', models.TextField(max_length=200)),
                ('city', models.CharField(max_length=60)),
                ('state', models.CharField(max_length=60)),
                ('country', models.CharField(max_length=60)),
                ('pincode', models.CharField(max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=60)),
                ('company_name', models.CharField(max_length=60)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'client_profile',
            },
        ),
        migrations.CreateModel(
            name='EmailLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sendgrid_id', models.CharField(default=None, max_length=255)),
                ('sent_to', models.CharField(default=None, max_length=255)),
                ('sent_on', models.DateTimeField(default=datetime.datetime(2018, 5, 6, 16, 9, 51, 791768, tzinfo=utc))),
                ('is_open', models.BooleanField(default=False)),
                ('is_clicked', models.BooleanField(default=False)),
                ('is_delivered', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'email_logs',
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_name', models.CharField(default=None, max_length=255)),
                ('email_description', models.CharField(default=None, max_length=255)),
                ('email_type', models.CharField(default=None, max_length=255)),
                ('email_weight', models.DecimalField(decimal_places=2, max_digits=4)),
                ('email_category', models.CharField(default=None, max_length=255)),
                ('tags', models.CharField(default=None, max_length=255)),
                ('template_name', models.CharField(default=None, max_length=255)),
                ('primary_link', models.CharField(default=None, max_length=255)),
            ],
            options={
                'db_table': 'email_template',
            },
        ),
        migrations.CreateModel(
            name='RespondentProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('dob', models.DateField(null=True)),
                ('city', models.CharField(max_length=60)),
                ('state', models.CharField(max_length=60)),
                ('country', models.CharField(max_length=60)),
                ('pincode', models.CharField(max_length=6)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'respondent_profile',
            },
        ),
        migrations.AddField(
            model_name='emaillogs',
            name='email_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.EmailTemplate'),
        ),
    ]
